//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Nick\Documents\Visual Studio 2015\Projects\MOSES\Moses.g4 by ANTLR 4.5.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MOSES {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IMosesListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5.3")]
[System.CLSCompliant(false)]
public partial class MosesBaseListener : IMosesListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>functionFetch</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionFetch([NotNull] MosesParser.FunctionFetchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionFetch</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionFetch([NotNull] MosesParser.FunctionFetchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>unaryVar</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryVar([NotNull] MosesParser.UnaryVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryVar</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryVar([NotNull] MosesParser.UnaryVarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expBitwise</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpBitwise([NotNull] MosesParser.ExpBitwiseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expBitwise</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpBitwise([NotNull] MosesParser.ExpBitwiseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expOR</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpOR([NotNull] MosesParser.ExpORContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expOR</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpOR([NotNull] MosesParser.ExpORContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expMulDivMod</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpMulDivMod([NotNull] MosesParser.ExpMulDivModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expMulDivMod</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpMulDivMod([NotNull] MosesParser.ExpMulDivModContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>constantExp</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExp([NotNull] MosesParser.ConstantExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExp</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExp([NotNull] MosesParser.ConstantExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableFetch</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableFetch([NotNull] MosesParser.VariableFetchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableFetch</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableFetch([NotNull] MosesParser.VariableFetchContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>variableAssign</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableAssign([NotNull] MosesParser.VariableAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>variableAssign</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableAssign([NotNull] MosesParser.VariableAssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expAND</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAND([NotNull] MosesParser.ExpANDContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAND</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAND([NotNull] MosesParser.ExpANDContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expOpPow</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpOpPow([NotNull] MosesParser.ExpOpPowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expOpPow</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpOpPow([NotNull] MosesParser.ExpOpPowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>newClassObject</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewClassObject([NotNull] MosesParser.NewClassObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>newClassObject</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewClassObject([NotNull] MosesParser.NewClassObjectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expCompare</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpCompare([NotNull] MosesParser.ExpCompareContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expCompare</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpCompare([NotNull] MosesParser.ExpCompareContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expConcat</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpConcat([NotNull] MosesParser.ExpConcatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expConcat</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpConcat([NotNull] MosesParser.ExpConcatContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpAddSub([NotNull] MosesParser.ExpAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expAddSub</c>
	/// labeled alternative in <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpAddSub([NotNull] MosesParser.ExpAddSubContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] MosesParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>number</c>
	/// labeled alternative in <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] MosesParser.NumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] MosesParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>string</c>
	/// labeled alternative in <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] MosesParser.StringContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.chunk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChunk([NotNull] MosesParser.ChunkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.chunk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChunk([NotNull] MosesParser.ChunkContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] MosesParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] MosesParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.innerfunctionBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInnerfunctionBlock([NotNull] MosesParser.InnerfunctionBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.innerfunctionBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInnerfunctionBlock([NotNull] MosesParser.InnerfunctionBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.returnBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnBlock([NotNull] MosesParser.ReturnBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.returnBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnBlock([NotNull] MosesParser.ReturnBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.loopBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopBlock([NotNull] MosesParser.LoopBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.loopBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopBlock([NotNull] MosesParser.LoopBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.classBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBlock([NotNull] MosesParser.ClassBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.classBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBlock([NotNull] MosesParser.ClassBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.localConstVarAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLocalConstVarAssign([NotNull] MosesParser.LocalConstVarAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.localConstVarAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLocalConstVarAssign([NotNull] MosesParser.LocalConstVarAssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDecl([NotNull] MosesParser.ClassDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.classDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDecl([NotNull] MosesParser.ClassDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDecl([NotNull] MosesParser.FunctionDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDecl([NotNull] MosesParser.FunctionDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileLoop([NotNull] MosesParser.WhileLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileLoop([NotNull] MosesParser.WhileLoopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoop([NotNull] MosesParser.LoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.loop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoop([NotNull] MosesParser.LoopContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.loopParse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopParse([NotNull] MosesParser.LoopParseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.loopParse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopParse([NotNull] MosesParser.LoopParseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.loops"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoops([NotNull] MosesParser.LoopsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.loops"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoops([NotNull] MosesParser.LoopsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.varAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarAssign([NotNull] MosesParser.VarAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.varAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarAssign([NotNull] MosesParser.VarAssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDef([NotNull] MosesParser.FunctionDefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionDef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDef([NotNull] MosesParser.FunctionDefContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameterList([NotNull] MosesParser.FunctionParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionParameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameterList([NotNull] MosesParser.FunctionParameterListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionParameterDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameterDefault([NotNull] MosesParser.FunctionParameterDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionParameterDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameterDefault([NotNull] MosesParser.FunctionParameterDefaultContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionParameterNoDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameterNoDefault([NotNull] MosesParser.FunctionParameterNoDefaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionParameterNoDefault"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameterNoDefault([NotNull] MosesParser.FunctionParameterNoDefaultContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionPrameterVariadic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionPrameterVariadic([NotNull] MosesParser.FunctionPrameterVariadicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionPrameterVariadic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionPrameterVariadic([NotNull] MosesParser.FunctionPrameterVariadicContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.variadic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariadic([NotNull] MosesParser.VariadicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.variadic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariadic([NotNull] MosesParser.VariadicContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRef([NotNull] MosesParser.RefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.ref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRef([NotNull] MosesParser.RefContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] MosesParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] MosesParser.FunctionBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.segmentBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSegmentBlock([NotNull] MosesParser.SegmentBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.segmentBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSegmentBlock([NotNull] MosesParser.SegmentBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.this"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterThis([NotNull] MosesParser.ThisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.this"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitThis([NotNull] MosesParser.ThisContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.complexFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplexFunctionCall([NotNull] MosesParser.ComplexFunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.complexFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplexFunctionCall([NotNull] MosesParser.ComplexFunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.complexVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplexVariable([NotNull] MosesParser.ComplexVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.complexVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplexVariable([NotNull] MosesParser.ComplexVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.variableOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableOrFunction([NotNull] MosesParser.VariableOrFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.variableOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableOrFunction([NotNull] MosesParser.VariableOrFunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] MosesParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] MosesParser.VarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] MosesParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] MosesParser.FunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.newInstance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewInstance([NotNull] MosesParser.NewInstanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.newInstance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewInstance([NotNull] MosesParser.NewInstanceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExp([NotNull] MosesParser.ExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExp([NotNull] MosesParser.ExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstExp([NotNull] MosesParser.ConstExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.constExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstExp([NotNull] MosesParser.ConstExpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorOr([NotNull] MosesParser.OperatorOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorOr([NotNull] MosesParser.OperatorOrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorAnd([NotNull] MosesParser.OperatorAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorAnd([NotNull] MosesParser.OperatorAndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorComparison([NotNull] MosesParser.OperatorComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorComparison([NotNull] MosesParser.OperatorComparisonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorPower"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorPower([NotNull] MosesParser.OperatorPowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorPower"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorPower([NotNull] MosesParser.OperatorPowerContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorUnary([NotNull] MosesParser.OperatorUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorUnary([NotNull] MosesParser.OperatorUnaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorAddSub([NotNull] MosesParser.OperatorAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorAddSub([NotNull] MosesParser.OperatorAddSubContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorMulDivMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorMulDivMod([NotNull] MosesParser.OperatorMulDivModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorMulDivMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorMulDivMod([NotNull] MosesParser.OperatorMulDivModContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="MosesParser.operatorBitwise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorBitwise([NotNull] MosesParser.OperatorBitwiseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="MosesParser.operatorBitwise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorBitwise([NotNull] MosesParser.OperatorBitwiseContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace MOSES
